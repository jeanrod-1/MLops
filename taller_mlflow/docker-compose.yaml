# docker-compose.yml
version: '2'

services:
  minio:
    container_name: Minio
    command: server /data --console-address ":9001"
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=supersecret
    image: quay.io/minio/minio:latest
    ports:
      - '9000:9000'
      - '9001:9001'
    volumes:
      - ./minio:/data
    restart: unless-stopped
  postgres:
    image: postgres:latest
    container_name: mlflow_postgres
    environment:
      POSTGRES_USER: mlflow
      POSTGRES_PASSWORD: mlflow_pass
      POSTGRES_DB: mlflow_db
    ports:
      - "5432:5432"
    restart: always
    volumes:
      - pg_data:/var/lib/postgresql/data

  mlflow:
    image: ghcr.io/mlflow/mlflow:v2.9.2
    container_name: mlflow
    environment:
      MLFLOW_TRACKING_URI: "postgresql://mlflow:mlflow_pass@db.mlflow.com/mlflow_db"
      AWS_ACCESS_KEY_ID: minio
      AWS_SECRET_ACCESS_KEY: minio123
      MLFLOW_S3_ENDPOINT_URL: "http://10.43.101.193:9000"
    ports:
      - "5000:5000"
    command: mlflow server --backend-store-uri postgresql://mlflow:mlflow_pass@db.mlflow.com/mlflow_db --default-artifact-root s3://mlflow/ --host 0.0.0.0

  jupyter:
    build:
      context: .
      dockerfile: dockerfile_jupyter
  api:
    build:
      context: .
      dockerfile: dockerfile_api
    container_name: airflow_api
    ports:
      - "8000:8000"
    command: >
      sh -c "uvicorn api:app --host 0.0.0.0 --port 8000 --reload"


volumes:
  pg_data:

  
