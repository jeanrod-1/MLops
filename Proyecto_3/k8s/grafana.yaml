apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboards
  namespace: mlops
data:
  dashboards.yml: |
    apiVersion: 1
    providers:
      - name: "default"
        folder: ""
        type: file
        disableDeletion: false
        options:
          path: /grafana-dashboard
  dashboard.json: |
    {
      "annotations": { "list": [] },
      "panels": [],
      "title": "Demo Panel",
      "uid": "demo",
      "version": 0
    }

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: mlops
spec:
  replicas: 1
  selector: { matchLabels: { app: grafana } }
  template:
    metadata: { labels: { app: grafana } }
    spec:
      containers:
        - name: grafana
          image: grafana/grafana
          ports: [{ containerPort: 3000 }]
          volumeMounts:
            - { name: config, mountPath: /etc/grafana/provisioning/dashboards }
            - { name: dashboards, mountPath: /grafana-dashboard }
      volumes:
        - { name: config,     configMap: { name: grafana-dashboards, items: [ { key: dashboards.yml, path: dashboards.yml } ] } }
        - { name: dashboards, configMap: { name: grafana-dashboards, items: [ { key: dashboard.json, path: dashboard.json } ] } }
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: mlops
spec:
  type: NodePort
  selector:
    app: grafana
  ports:
    - port: 3000
      targetPort: 3000
      nodePort: 30013