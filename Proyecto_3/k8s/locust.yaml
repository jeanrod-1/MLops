apiVersion: batch/v1
kind: Job
metadata:
  name: locust
  namespace: mlops
spec:
  template:
    metadata: { name: locust }
    spec:
      containers:
        - name: locust
          image: locustio/locust
          command: ["locust", "-f", "/locust/locustfile.py",
                    "--host", "http://fastapi.mlops.svc.cluster.local",
                    "--headless", "-u", "200", "-r", "20", "-t", "2m"]
          volumeMounts:
            - { name: locustfile, mountPath: /locust }
      restartPolicy: Never
      volumes:
        - { name: locustfile, configMap: { name: locustfile } }

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: locustfile
  namespace: mlops
data:
  locustfile.py: |
    from locust import HttpUser, task, between
    import random
    class FastApiUser(HttpUser):
        wait_time = between(1, 3)
        @task
        def predict(self):
            payload = {
                "num_lab_procedures": random.randint(1,132),
                "num_medications": random.randint(1,81),
                "time_in_hospital": random.randint(1,14),
                "race": random.choice(["Caucasian","African American","Asian","Hispanic","Other"])
            }
            self.client.post("/predict", json=payload)